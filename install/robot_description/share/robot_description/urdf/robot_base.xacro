<?xml version="1.0"?>
<robot name="case" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Importando módulos -->
  <xacro:include filename="$(find robot_description)/urdf/wheels.xacro"/>
  <xacro:include filename="$(find robot_description)/urdf/sensors.xacro"/>

  <!-- Base do robô -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
    </visual>
  </link>

  <!-- Chassis -->
  <link name="chassis">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.5 0.3 0.2"/>
      </geometry>
      <material name="gray">
        <color rgba="0.7 0.2 0.5 1"/>
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.5 0.3 0.2"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="100.0"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
  </link>

  <joint name="chassis_joint" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
    <origin xyz="0 0 0.1" rpy="0 0 0"/>
  </joint>

  <!-- Caster Ball Frente -->
  <link name="caster_ball_front">
    <visual>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>

  <joint name="caster_joint_front" type="fixed">
    <parent link="chassis"/>
    <child link="caster_ball_front"/>
    <origin xyz="0.2 0 -0.1" rpy="0 0 0"/>
  </joint>

  <gazebo reference="caster_ball_front">
    <material>Gazebo/Black</material>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </gazebo>

  <!-- Caster Ball Traseira -->
  <link name="caster_ball_back">
    <visual>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
      <material name="black">
        <color rgba="0 0 0 1"/>
      </material>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.05"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>

  <joint name="caster_joint_back" type="fixed">
    <parent link="chassis"/>
    <child link="caster_ball_back"/>
    <origin xyz="-0.2 0 -0.1" rpy="0 0 0"/>
  </joint>

  <gazebo reference="caster_ball_back">
    <material>Gazebo/Black</material>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </gazebo>

  <!-- Rodas -->
  <xacro:wheel wheel_name="left_wheel" wheel_x="0" wheel_y="0.15" wheel_z="0" wheel_rpy="-1.57 0 0"/>
  <xacro:wheel wheel_name="right_wheel" wheel_x="0" wheel_y="-0.15" wheel_z="0" wheel_rpy="-1.57 0 0"/>

  <!-- Sensores -->
  <xacro:sensor_macro sensor_name="imu_link" sensor_x="0" sensor_y="0" sensor_z="0"/>
  <xacro:sensor_macro sensor_name="lidar_link" sensor_x="0" sensor_y="0" sensor_z="0.2"/>
  <xacro:sensor_macro sensor_name="camera_link" sensor_x="0.3" sensor_y="0" sensor_z="-0.005"/>

  
  <!-- Plugin de Controle Diferencial -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <!-- Configurações básicas -->
      <update_rate>50</update_rate>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.3</wheel_separation>
      <wheel_diameter>0.1</wheel_diameter>
      
      <!-- Reduzir torque e aceleração inicial -->
      <max_wheel_torque>5</max_wheel_torque>
      <max_wheel_acceleration>0.5</max_wheel_acceleration>
      
      <!-- Configurações de odometria -->
      <command_topic>cmd_vel</command_topic>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>false</publish_odom_tf>
      <publish_wheel_tf>true</publish_wheel_tf>
      <odometry_topic>odom</odometry_topic>
      <robot_base_frame>base_link</robot_base_frame>
      <odometry_frame>odom</odometry_frame>
      
      <!-- These parameters tell the plugin to publish frame transforms with these names -->
      <left_wheel_frame>left_wheel</left_wheel_frame>
      <right_wheel_frame>right_wheel</right_wheel_frame>
    </plugin>
  </gazebo>
</robot>
