version: '3'

networks:
  ros_network:
    driver: bridge

services:
    base:
        image: osrf/ros:foxy-desktop
        stdin_open: true
        tty: true
        # removed network_mode: host
        ipc: host
        privileged: true
        volumes:
            - ./teste:/teste
        networks:
            - ros_network
        environment:
            - ROS_DOMAIN_ID=30
            - CYCLONEDDS_URI=file:///cyclonedds.xml

    talker:
        extends: base
        container_name: ros2_talker
        command: ["bash", "-c", "source /opt/ros/foxy/setup.bash && ros2 run demo_nodes_cpp talker"]

    listener:
        extends: base
        container_name: ros2_listener
        command: ["bash", "-c", "source /opt/ros/foxy/setup.bash && ros2 run demo_nodes_cpp listener"]
        
    ros_bridge:
        image: osrf/ros:foxy-desktop
        container_name: ros_bridge
        networks:
            - ros_network
        volumes:
            - ./cyclonedds.xml:/cyclonedds.xml
        environment:
            - ROS_DOMAIN_ID=30
            - CYCLONEDDS_URI=file:///cyclonedds.xml
        command: ["bash", "-c", "source /opt/ros/foxy/setup.bash && ros2 daemon start && sleep infinity"]
        
    nav2_base:
        build: 
            context: .
            dockerfile: Dockerfile
        stdin_open: true
        tty: true
        # removed network_mode: host
        ipc: host
        privileged: true
        networks:
            - ros_network
        volumes:
            - ./cyclonedds.xml:/cyclonedds.xml
        environment:
            - ROS_DOMAIN_ID=30
            - CYCLONEDDS_URI=file:///cyclonedds.xml
        
    nav2_goal:
        extends: nav2_base
        container_name: ros2_nav2_goal
        command: ["bash", "-c", "sleep 10 && source /opt/ros/foxy/setup.bash && ros2 action send_goal /navigate_to_pose nav2_msgs/action/NavigateToPose '{pose: {header: {frame_id: \"map\"}, pose: {position: {x: 1.0, y: 0.0, z: 0.0}, orientation: {w: 1.0}}}}' --feedback"]