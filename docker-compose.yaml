version: '3.8'

networks:
  ros_network:
    driver: bridge

services:
  # Serviço base para todos os nós ROS
  ros_base:
    build: 
      context: .
      dockerfile: Dockerfile
    stdin_open: true
    tty: true
    ipc: host
    privileged: true
    networks:
      - ros_network
    volumes:
      - ./cyclonedx.xml:/cyclonedx.xml
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ros_logs:/var/log/ros
    environment:
      - ROS_DOMAIN_ID=30
      - CYCLONEDX_URI=file:///cyclonedx.xml
      - DISPLAY=${DISPLAY}
      - RMW_IMPLEMENTATION=rmw_cyclonedx_cpp
    
  # Bridge ROS para comunicação entre contêineres
  ros_bridge:
    extends: ros_base
    container_name: ros2_bridge
    command: >
      bash -c "
      source /opt/ros/foxy/setup.bash &&
      ros2 daemon start &&
      sleep infinity"
    restart: unless-stopped

  # Serviço de Localização (AMCL + EKF)
  localization:
    extends: ros_base
    container_name: ros2_localization
    command: >
      bash -c "
      source /opt/ros/foxy/setup.bash &&
      source /workspace/install/setup.bash &&
      sleep 5 &&
      ros2 launch rm_localization localization.launch.py"
    depends_on:
      - ros_bridge
    restart: unless-stopped

  # Serviço de Navegação (Nav2 Stack)
  navigation:
    extends: ros_base
    container_name: ros2_navigation
    command: >
      bash -c "
      source /opt/ros/foxy/setup.bash &&
      source /workspace/install/setup.bash &&
      sleep 10 &&
      ros2 launch rm_navigation navigation.launch.py"
    depends_on:
      - localization
    restart: unless-stopped

  # Serviço do Publicador de Waypoints
  waypoint_follower:
    extends: ros_base
    container_name: ros2_waypoint_follower
    command: >
      bash -c "
      source /opt/ros/foxy/setup.bash &&
      source /workspace/install/setup.bash &&
      sleep 15 &&
      ros2 run waypoint_navigation_pkg waypoint_publisher"
    depends_on:
      - navigation
    restart: unless-stopped

  # Serviço para monitoramento (opcional)
  monitoring:
    extends: ros_base
    container_name: ros2_monitoring
    command: >
      bash -c "
      source /opt/ros/foxy/setup.bash &&
      source /workspace/install/setup.bash &&
      sleep 20 &&
      echo '=== ROS 2 Services Available ===' &&
      ros2 service list &&
      echo '=== ROS 2 Topics Available ===' &&
      ros2 topic list &&
      echo '=== Waiting for manual waypoint trigger ===' &&
      echo 'Call: ros2 service call /start_waypoint_navigation std_srvs/srv/Trigger' &&
      sleep infinity"
    depends_on:
      - waypoint_follower
    restart: unless-stopped

# Volumes para persistência
volumes:
  ros_logs:
    driver: local